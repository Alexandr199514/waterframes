buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

configurations {
    library
    implementation.extendsFrom library
}

minecraft.runs.all {
    // Tell forge to include your libraries in the classpath
    lazyToken('minecraft_classpath') {
        configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}

minecraft {
    mappings channel: 'parchment', version: "${project.parchementV}-${project.mcV}"

    runs {
        client {
            taskName "WF_1.19.2_Client"
            workingDirectory project.file('run')
			
			property 'forge.logging.console.level', 'debug'
			arg '--mixin.config'
			arg 'waterframes.mixin.json'
        }

        server {
            taskName "WF_1.19.2_Server"
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            arg '--mixin.config'
            arg 'waterframes.mixin.json'
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://maven.tterrag.com/" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mcV}-${project.fgV}"

    //DEPENDENCIES
    implementation fg.deobf("curse.maven:creativecore-257814:4584615")
    implementation fg.deobf("curse.maven:watermedia-869524:4583242")

    // UTIL
    implementation fg.deobf("curse.maven:ferritecore-429235:4117906")
    implementation fg.deobf("curse.maven:fastload-630620:4271606")
    implementation fg.deobf("curse.maven:lazy-dfu-forge-460819:4327266")
    implementation fg.deobf("curse.maven:spark-361579:4505309")

    // MOD SUPPORT
    implementation fg.deobf("curse.maven:rubidium-574856:4568727")
    implementation fg.deobf("com.simibubi.create:create-${mcV}:${createV}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${mcV}:${flywheelV}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrateV}")

    // MIXINS
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin { add sourceSets.main, "waterframes.mixin-refmap.json" }

jar {
    manifest {
        attributes([
            "Specification-Title": project.name,
            "Specification-Vendor": project.author,
            "Specification-Version": project.version,
            "Implementation-Title": project.name,
            "Implementation-Version"  : project.version,
            "Implementation-Vendor": project.author,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": 0,
            "MixinConfigs": "waterframes.mixin.json"
        ])
    }
    from {
        configurations.library.collect {
            it.isDirectory() ? it.matching {
                exclude '*', 'META-INF/**'
            } : zipTree(it).matching {
                exclude '*', 'META-INF/**'
            }
        }
    }
}

jar.finalizedBy('reobfJar')
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}